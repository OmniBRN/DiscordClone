@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager


@if (SignInManager.IsSignedIn(User))
{
    var user = UserManager.GetUserAsync(User).Result;
    if (user != null)
    {
        <div class="test2dor bottom">
            <hr/>
            <a asp-controller="EditProfile" asp-action="Edit" asp-route-id="@user.Id" ><img src=@user.ProfilePicture class="poza-grup profil-user"/></a>
            <div class="detalii-grup">
                <p class="nume-profildor">@user.UserName</p>

                <div class="icon-profil Discord">
                    @if (User.IsInRole("Admin"))
                    {
                        <a asp-controller="Users" asp-action="Index" class="icon"><i class="bi bi-people"></i></a>
                    }
                    <a asp-controller="Notifications" asp-action="Index" class="icon"><i class="bi bi-envelope-open"></i></a>
                    <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Groups", new { area = "" })">
                        <button type="submit" class="icon"><i class="bi bi-door-closed"></i></button>
                    </form>
                </div>
            </div>
        </div>
    }
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
